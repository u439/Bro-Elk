########################
# logstash Configuration Files - Bro IDS Logs
# MIT License, so do what you want with it!
#
# For use with logstash, elasticsearch, and kibana to analyze logs
#
# Usage: Reference this config file for your instance of logstash to parse Bro x509 logs
#
# Limitations: Standard bro log delimiter is tab.
#
#######################

input {
  file {
    type => "bro-x509_log"
    start_position => "end"
    sincedb_path => "/var/tmp/.bro_x509_sincedb"

    #Edit the following path to reflect the location of your log files. You can also change the extension if you use something else
    path => "/opt/nsm/bro/logs/current/x509.log"
  }
}

filter {

  #Let's get rid of those header lines; they begin with a hash
  if [message] =~ /^#/ {
    drop { }
  }

  #Now, using the csv filter, we can define the Bro log fields
  if [type] == "bro-x509_log" {
    csv {

      #x509.log:#fields	ts	id	certificate.version	certificate.serial	certificate.subject	certificate.issuer	certificate.not_valid_before	certificate.not_valid_after	certificate.key_alg	certificate.sig_alg	certificate.key_type	certificate.key_length	certificate.exponent	certificate.curve	san.dns	san.uri	san.email	san.ip	basic_constraints.ca	basic_constraints.path_len
      columns => ["ts","id","certificate.version","certificate.serial","certificate.subject","icertificate.issuer","certificate.not_valid_before","certificate.not_valid_after","certificate.key_alg","certificate.sig_alg","certificate.key_type","certificate.key_length","certificate.exponent","certificate.curve","san.dns","san.uri","san.email","san.ip","basic_constraints.ca","basic_constraints.path_len"]

      #If you use a custom delimiter, change the following value in between the quotes to your delimiter. Otherwise, leave the next line alone.
      separator => "	"
    }

    #Let's convert our timestamp into the 'ts' field, so we can use Kibana features natively
    date {
      match => [ "ts", "UNIX" ]

    }
    
    mutate {
      rename =>  [ "certificate.version", "certificate_version" ]
      rename =>  [ "certificate.serial", "certificate_serial" ]
      rename =>  [ "certificate.subject", "certificate_subject" ]
      rename =>  [ "icertificate.issuer", "icertificate_issuer" ]
      rename =>  [ "certificate.not_valid_before", "certificate_not_valid_before" ]
      rename =>  [ "certificate.not_valid_after", "certificate_not_valid_after" ]
      rename =>  [ "certificate.key_alg", "certificate_key_alg" ]
      rename =>  [ "certificate.sig_alg", "certificate_sig_alg" ]
      rename =>  [ "certificate.key_type", "certificate_key_type" ]
      rename =>  [ "certificate.key_length", "certificate_key_length" ]
      rename =>  [ "certificate.exponent", "certificate_exponent" ]
      rename =>  [ "certificate.curve", "certificate_curve" ]
      rename =>  [ "san.dns", "san_dns" ]
      rename =>  [ "san.uri", "san_uri" ]
      rename =>  [ "san.email", "san_email" ]
      rename =>  [ "san.ip", "san_ip" ]
      rename =>  [ "basic_constraints.ca", "basic_constraints_ca" ]
      rename =>  [ "basic_constraints.path_len", "basic_constraints_path_len" ]
    }
  }
}

output {
  #stdout { codec => rubydebug }
  elasticsearch { hosts => localhost }
}
